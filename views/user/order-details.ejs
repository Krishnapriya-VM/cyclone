<%- include("layout/header1.ejs") %>
<style>
    .card {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
    background-color: #fff;
    }

    .card-body {
        padding: 10px;
    }

    .product-actions .btn {
        margin-right: 10px;
    }

    .retry-payment-btn {
        background-color: #ffc107;
        color: #fff;
        border: none;
    }

</style>

<main class="main">
    <div class="page-header">
        <div class="container d-flex flex-column align-items-center">
            <h1>Order Details</h1>
        </div>
    </div>

    <div class="container account-container custom-account-container">
        <div class="row">
            <div class="sidebar widget widget-dashboard mb-lg-0 mb-3 col-lg-3 order-0">
                <ul class="nav nav-tabs list flex-column mb-0" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link" href="/user-profile" role="tab" aria-controls="edit" aria-selected="false">Account details</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/view-orders" role="tab" aria-controls="order" aria-selected="true">Orders</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/downloads" role="tab" aria-controls="download" aria-selected="false">Downloads</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/address">Addresses</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/change-password" role="tab" aria-controls="shipping" aria-selected="false">Change Password</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/wallet">Wallet</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/wishlist">Wishlist</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/logout">Logout</a>
                    </li>
                </ul>
            </div>
            <div class="col-lg-9 order-lg-last order-1 tab-content">
                <div class="tab-pane fade show active" id="order-details" role="tabpanel">
                    <div class="order-details-content">
                        <h3 class="account-sub-title d-none d-md-block"><i class="sicon-social-dropbox align-middle mr-3"></i>Order Details</h3>

                        <div class="order-summary mb-5">
                            <h4>Order ID: <%= order._id %></h4><br>
                            <p>Date: <%= order.date.toLocaleDateString() %></p>
                            <p >Total: Rs. <%= locals?.totalOriginalPrice %></p>
                            <p >Coupon Reduction: Rs. <%= locals?.couponReductionRate %></p>

                            <p style="font-weight: 600; font-size: large;">Grand Total: Rs: <%= order.total_amount %></p>
                        </div>

                        
                        
                        <h5>Products:</h5>
                        <div class="products-list">
                            <% products.forEach(product => { %>
                                <div class="card mb-3 shadow-sm d-flex align-items-around">
                                    <div class="row no-gutters">
                                        <div style="margin-left: 5rem;" class="col-md-2 d-flex align-items-center justify-content-center">
                                            <img src="/public/image/<%= product.image %>" alt="Product Image" class="card-img" style="max-width: 100%; height: auto;">
                                        </div>
                                        <div class="col-md-8 d-flex flex-column align-items-center"> <!-- Added alignment classes here -->
                                            <div class="card-body text-left"> <!-- Align text to right -->
                                                <h5 class="card-title">Product Name: <%= product.product_id.productname %></h5>
                                                <p class="card-text">Quantity: <%= product.quantity %></p>
                                                <p class="card-text">Price: Rs: <%= product.price %></p>
                                                <% if(product.price !== product.offeredPrice){ %>
                                                <p class="card-text">Offer Price: Rs: <%= product.offeredPrice %></p>
                                                <% } %>
                                                <p class="card-text">Status: <%= product.status %></p>

                                                
                                                <div class="product-actions mt-3">
                                                    <% if (product.status === "Delivered") { %>
                                                        <button class="btn btn-info return-product-btn" data-order-id="<%= order._id %>" data-product-id="<%= product.product_id._id %>" data-product-status="<%= product.status %>">Return</button>

                                                        <a href="/invoice?id=<%= order._id %>" class="btn btn-secondary download-invoice-btn" data-order-id="<%= order._id %>">Download Invoice</a>
                                                    <% } %>

                                                    <% if (product.status !== "Delivered" && product.status !== "Canceled" && product.status !== "Returned") { %>
                                                        <button class="btn btn-danger cancel-product-btn" data-order-id="<%= order._id %>" data-product-id="<%= product.product_id._id %>" data-product-status="<%= product.status %>">Cancel</button>
                                                    <% } %>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>


                        
                        <h5 class="mt-5">Shipping Address:</h5>
                        <p><%= order.address_id.fname %> <%= order.address_id.lname %></p>
                        <p><%= order.address_id.houseno %>, <%= order.address_id.street_address %></p>
                        <p><%= order.address_id.landmark %></p>
                        <p><%= order.address_id.town %>, <%= order.address_id.district %>, <%= order.address_id.state %></p>
                        <p><%= order.address_id.country %> - <%= order.address_id.pincode %></p>
                        <p>Contact: <%= order.address_id.mobile %></p>

                        <h5>Payment Method:</h5>
                        <p><%= order.payment_method %></p>

                        <h5>Payment Status:</h5>
                        <p><%= order.payment_status %></p>

                        <% if (order.payment_status === "Pending") { %>
                            <button class="btn btn-warning retry-payment-btn" data-order-id="<%= order._id %>">Retry Payment</button>
                        <% } %>
                    </div>
                </div>
            </div><!-- End .tab-content -->
        </div><!-- End .row -->
    </div><!-- End .container -->

    <div class="mb-5"></div><!-- margin -->
</main><!-- End .main -->
<div class="modal fade" id="returnProductModal" tabindex="-1" aria-labelledby="returnProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="returnProductModalLabel"><b style="font-size: 20px;">Return Product</b></h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="returnProductForm">
            <div class="form-group">
              <label for="returnReason" style="font-size: 15px;">Reason for Return</label>
              <select class="form-control" id="returnReason" required>
                <option value="">Select a reason</option>
                <option value="Damaged Product">Damaged Product</option>
                <option value="Wrong Product Delivered">Wrong Product Delivered</option>
                <option value="Product Not as Expected">Product Not as Expected</option>
                <option value="Received Defective Product">Received Defective Product</option>
                <option value="Missing Accessories/Parts">Missing Accessories/Parts</option>
                <option value="Product Quality Not Satisfactory">Product Quality Not Satisfactory</option>
                <option value="Ordered by Mistake">Ordered by Mistake</option>
                <option value="Product Arrived Late">Product Arrived Late</option>
                <option value="Better Price Available Elsewhere">Better Price Available Elsewhere</option>
                <option value="Other">Other</option>
              </select>
            </div>
            <div class="form-group" id="otherReasonGroup" style="display:none;">
                <label for="otherReason" style="font-size: 15px;">Please provide your reason</label>
                <textarea class="form-control" id="otherReason" rows="3" placeholder="Enter your reason"></textarea>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="submitReturnBtn">Return Product</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.querySelectorAll('.cancel-product-btn').forEach(button => {
        button.addEventListener('click', async (event) => {
            const productId = event.target.getAttribute('data-product-id');
            const orderId = event.target.getAttribute('data-order-id');
            const status = event.target.getAttribute('data-product-status');  // Fetch product status from an attribute
            
            if (['Processing', 'Dispatched', 'Shipped'].includes(status)) {
                Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to cancel this order!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    // Proceed with cancellation if user confirms
                    try {
                        const res = await fetch('/cancel-order', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ productId, orderId })
                        });

                        const data = await res.json();
                        if (data.success) {
                            Swal.fire({
                                title: 'Cancelled!',
                                text: 'Product has been cancelled successfully',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(()=>{
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Failed!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    } catch (err) {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred during cancellation',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                }
            });
        } else {
            Swal.fire({
                title: 'Cannot Cancel!',
                text: 'Cancellation is not allowed for delivered products',
                icon: 'warning',
                confirmButtonText: 'OK'
            });
        }
        });
    });


    let currentOrderId, currentProductId;
document.querySelectorAll('.return-product-btn').forEach(button => {
    button.addEventListener('click', (event) => {
        currentOrderId = event.target.getAttribute('data-order-id');
        currentProductId = event.target.getAttribute('data-product-id');

        // Open the modal
        $('#returnProductModal').modal('show');
    });
});

// Show the "other reason" field only if "Other" is selected
document.getElementById('returnReason').addEventListener('change', function() {
    const selectedReason = this.value;
    const otherReasonGroup = document.getElementById('otherReasonGroup');

    if (selectedReason === 'Other') {
        otherReasonGroup.style.display = 'block'; // Show the other reason text area
    } else {
        otherReasonGroup.style.display = 'none';  // Hide the other reason text area
        document.getElementById('otherReason').value = ''; // Clear the text area
    }
});

document.getElementById('submitReturnBtn').addEventListener('click', async () => {
    const returnReason = document.getElementById('returnReason').value;
    const otherReason = document.getElementById('otherReason').value;
    
    let finalReason = returnReason;
    if (returnReason === 'Other') {
        if (!otherReason.trim()) {
            Swal.fire({
                title: 'Error!',
                text: 'Please provide a reason for return',
                icon: 'error',
                confirmButtonText: 'OK'
            });
            return;
        }
        finalReason = otherReason;
    }

    // Proceed with the return process
    try {
        const res = await fetch('/return-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                productId: currentProductId,
                orderId: currentOrderId,
                returnReason: finalReason,
            })
        });

        const data = await res.json();
        if (data.success) {
            Swal.fire({
                title: 'Returned!',
                text: 'Product has been returned successfully',
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                location.reload(); // Reload the page after successful return
            });
        } else {
            Swal.fire({
                title: 'Failed!',
                text: data.message,
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    } catch (err) {
        Swal.fire({
            title: 'Error!',
            text: 'An error occurred during the return process',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }

    // Close the modal
    $('#returnProductModal').modal('hide');
});


</script>

<script src="/public/js/orderDetails.js"></script>

<%- include("layout/footer.ejs") %>